
Showing logs for build [32mjenkinsx01-spring-framework-pet-h4v25-1[0m stage [32mfrom-build-pack[0m and container [32mcredential-initializer[0m
{"level":"info","ts":1615552579.6499498,"caller":"creds-init/main.go:44","msg":"Credentials initialized."}

Showing logs for build [32mjenkinsx01-spring-framework-pet-h4v25-1[0m stage [32mfrom-build-pack[0m and container [32mworking-dir-initializer[0m

Showing logs for build [32mjenkinsx01-spring-framework-pet-h4v25-1[0m stage [32mfrom-build-pack[0m and container [32mplace-tools[0m

Showing logs for build [32mjenkinsx01-spring-framework-pet-h4v25-1[0m stage [32mfrom-build-pack[0m and container [32mstep-git-source-jenkinsx01-spring-framework-pet-h4v25-6gqp6[0m
{"level":"info","ts":1615552588.3370647,"caller":"git/git.go:105","msg":"Successfully cloned https://github.com/JenkinsX01/spring-framework-petclinic.git @ v5.3.4 in path /workspace/source"}
{"level":"warn","ts":1615552588.3371854,"caller":"git/git.go:152","msg":"Unexpected error: creating symlink: symlink /tekton/home/.ssh /root/.ssh: file exists"}
{"level":"info","ts":1615552588.3782108,"caller":"git/git.go:133","msg":"Successfully initialized and updated submodules in path /workspace/source"}

Showing logs for build [32mjenkinsx01-spring-framework-pet-h4v25-1[0m stage [32mfrom-build-pack[0m and container [32mstep-setup-builder-home[0m

Showing logs for build [32mjenkinsx01-spring-framework-pet-h4v25-1[0m stage [32mfrom-build-pack[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:
WARNING: no SHAs to merge, falling back to initial cloned commit

Showing logs for build [32mjenkinsx01-spring-framework-pet-h4v25-1[0m stage [32mfrom-build-pack[0m and container [32mstep-setup-jx-git-credentials[0m
Generated Git credentials file /workspace/xdg_config/git/credentials

Showing logs for build [32mjenkinsx01-spring-framework-pet-h4v25-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-mvn-deploy[0m
Picked up _JAVA_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
OpenJDK 64-Bit Server VM warning: If the number of processors is expected to increase from one, then you should configure the number of parallel GC threads appropriately using -XX:ParallelGCThreads=N
[INFO] Scanning for projects...
[INFO] 
[INFO] -------< org.springframework.samples:spring-framework-petclinic >-------
[INFO] Building Spring Framework Petclinic 5.3.4
[INFO] --------------------------------[ war ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ spring-framework-petclinic ---
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.6:prepare-agent (default) @ spring-framework-petclinic ---
[INFO] argLine set to -javaagent:/home/jenkins/.mvnrepository/org/jacoco/org.jacoco.agent/0.8.6/org.jacoco.agent-0.8.6-runtime.jar=destfile=/workspace/source/target/jacoco.exec
[INFO] 
[INFO] --- wro4j-maven-plugin:1.8.0:run (default) @ spring-framework-petclinic ---
[INFO] /workspace/source/src/main/webapp/resources/less
[INFO] Executing the mojo: 
[INFO] Wro4j Model path: /workspace/source/src/main/wro/wro.xml
[INFO] targetGroups: null
[INFO] minimize: true
[INFO] ignoreMissingResources: null
[INFO] parallelProcessing: false
[INFO] buildDirectory: /workspace/source/target
[INFO] destinationFolder: /workspace/source/target
[INFO] cssDestinationFolder: /workspace/source/target/petclinic/resources/css
[INFO] The following groups will be processed: [petclinic]
[INFO] folder: /workspace/source/target/petclinic/resources/css
[INFO] processing group: petclinic.css
[WARNING] Less warnings are:
[WARNING] 10:1 Cannot link source map. Css result location is not know and could not be deduced from input less source..
[INFO] file size: petclinic.css -> 152435 bytes
[INFO] /workspace/source/target/petclinic/resources/css/petclinic.css (152435 bytes)
[INFO] folder: /workspace/source/target
[INFO] processing group: petclinic.js
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ spring-framework-petclinic ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 23 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ spring-framework-petclinic ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 47 source files to /workspace/source/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ spring-framework-petclinic ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 11 resources
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ spring-framework-petclinic ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 11 source files to /workspace/source/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.1:test (default-test) @ spring-framework-petclinic ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running org.springframework.samples.petclinic.web.PetTypeFormatterTests
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.111 s - in org.springframework.samples.petclinic.web.PetTypeFormatterTests
[INFO] Running org.springframework.samples.petclinic.web.VisitControllerTests
INFO  WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
INFO  WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@66d44581, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1afa048a, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@293ecff6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@70eb94d7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@34d72f06, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e43b342, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@21dd9203, org.springframework.test.context.event.EventPublishingTestExecutionListener@dbcf7c3]
INFO  Version - HV000001: Hibernate Validator 6.2.0.Final
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 1 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 1 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.184 s - in org.springframework.samples.petclinic.web.VisitControllerTests
[INFO] Running org.springframework.samples.petclinic.web.CrashControllerTests
INFO  WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
INFO  WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@e44af47, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1f474cbe, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@25a1888, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4bdedc5b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@60cb6cf0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@45cceeeb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@17803082, org.springframework.test.context.event.EventPublishingTestExecutionListener@2a810a2d]
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
WARN  warn - Resolved [java.lang.RuntimeException: Expected: controller used to showcase what happens when an exception is thrown]
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.098 s - in org.springframework.samples.petclinic.web.CrashControllerTests
[INFO] Running org.springframework.samples.petclinic.web.PetControllerTests
INFO  WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
INFO  WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@84a3e9f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@760a21dd, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@c8a5e67, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@c20a22f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@55c7cbf2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@72641c5e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2cc30d13, org.springframework.test.context.event.EventPublishingTestExecutionListener@257bf37e]
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 1 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 1 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 1 ms
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.37 s - in org.springframework.samples.petclinic.web.PetControllerTests
[INFO] Running org.springframework.samples.petclinic.web.OwnerControllerTests
INFO  WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
INFO  WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@c74aaf2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3fd8e5a4, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@3613bc0b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@de353ad, org.springframework.test.context.support.DirtiesContextTestExecutionListener@24694bd9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5c646f35, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@773c7356, org.springframework.test.context.event.EventPublishingTestExecutionListener@60552827]
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 1 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 1 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.59 s - in org.springframework.samples.petclinic.web.OwnerControllerTests
[INFO] Running org.springframework.samples.petclinic.web.VetControllerTests
INFO  WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
INFO  WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@762eb3a1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c7b9c6b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@26c87907, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@33fad3c7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@304adda2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@10728704, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7517d44c, org.springframework.test.context.event.EventPublishingTestExecutionListener@109645c2]
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
INFO  MockServletContext - Initializing Spring TestDispatcherServlet ''
INFO  TestDispatcherServlet - Initializing Servlet ''
INFO  TestDispatcherServlet - Completed initialization in 0 ms
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.585 s - in org.springframework.samples.petclinic.web.VetControllerTests
[INFO] Running org.springframework.samples.petclinic.model.ValidatorTests
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.214 s - in org.springframework.samples.petclinic.model.ValidatorTests
[INFO] Running org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests
INFO  DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
INFO  DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@63d2fb15, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@27f567e4, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@50033e95, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7cf6679f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@8083147, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4ceade5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4df0dc7f, org.springframework.test.context.event.EventPublishingTestExecutionListener@2f580c1]
INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 175 ms. Found 4 JPA repository interfaces.
INFO  LogHelper - HHH000204: Processing PersistenceUnitInfo [name: petclinic]
INFO  Version - HHH000412: Hibernate ORM core version 5.4.27.Final
INFO  Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
INFO  JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'petclinic'
Hibernate: select vet0_.id as id1_5_, vet0_.first_name as first_na2_5_, vet0_.last_name as last_nam3_5_ from vets vet0_
Hibernate: select specialtie0_.vet_id as vet_id1_4_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_4_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_4_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_4_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_4_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_4_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_6_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet_id4_6_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@71f1be30 testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@5a9d279f, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6402ddfc testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@11f55c00]; rollback [true]
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_, visits3_.pet_id as pet_id4_6_3_, visits3_.id as id1_6_3_, visits3_.id as id1_6_4_, visits3_.visit_date as visit_da2_6_4_, visits3_.description as descript3_6_4_, visits3_.pet_id as pet_id4_6_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
Hibernate: insert into visits (id, visit_date, description, pet_id) values (null, ?, ?, ?)
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@71f1be30 testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@5a9d279f, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6402ddfc testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@71f1be30 testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@6358dccd, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6402ddfc testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@11f55c00]; rollback [true]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_6_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: update owners set first_name=?, last_name=?, address=?, city=?, telephone=? where id=?
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@71f1be30 testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@6358dccd, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6402ddfc testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
Hibernate: select visit0_.id as id1_6_, visit0_.visit_date as visit_da2_6_, visit0_.description as descript3_6_, visit0_.pet_id as pet_id4_6_ from visits visit0_ left outer join pets pet1_ on visit0_.pet_id=pet1_.id where pet1_.id=?
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_, visits3_.pet_id as pet_id4_6_3_, visits3_.id as id1_6_3_, visits3_.id as id1_6_4_, visits3_.visit_date as visit_da2_6_4_, visits3_.description as descript3_6_4_, visits3_.pet_id as pet_id4_6_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@71f1be30 testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@c4b4734, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6402ddfc testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@11f55c00]; rollback [true]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_6_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet_id4_6_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select pettype0_.id as id1_3_, pettype0_.name as name2_3_ from types pettype0_ order by pettype0_.name
Hibernate: insert into pets (id, name, birth_date, owner_id, type_id) values (null, ?, ?, ?, ?)
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@71f1be30 testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@c4b4734, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6402ddfc testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@71f1be30 testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@2ed97aed, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6402ddfc testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@11f55c00]; rollback [true]
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: insert into owners (id, first_name, last_name, address, city, telephone) values (null, ?, ?, ?, ?, ?)
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@71f1be30 testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@2ed97aed, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6402ddfc testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_6_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@71f1be30 testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@53dca0c3, testMethod = shouldUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6402ddfc testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@11f55c00]; rollback [true]
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_, visits3_.pet_id as pet_id4_6_3_, visits3_.id as id1_6_3_, visits3_.id as id1_6_4_, visits3_.visit_date as visit_da2_6_4_, visits3_.description as descript3_6_4_, visits3_.pet_id as pet_id4_6_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@71f1be30 testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@53dca0c3, testMethod = shouldUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6402ddfc testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
Hibernate: select pettype0_.id as id1_3_, pettype0_.name as name2_3_ from types pettype0_ order by pettype0_.name
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_, visits3_.pet_id as pet_id4_6_3_, visits3_.id as id1_6_3_, visits3_.id as id1_6_4_, visits3_.visit_date as visit_da2_6_4_, visits3_.description as descript3_6_4_, visits3_.pet_id as pet_id4_6_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.879 s - in org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests
[INFO] Running org.springframework.samples.petclinic.service.ClinicServiceJpaTests
INFO  DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
INFO  DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@67e69d7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@63b4aca, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@d67403f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1e7cd800, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6bb92ac9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3788506e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@d98818, org.springframework.test.context.event.EventPublishingTestExecutionListener@781decdb]
INFO  LogHelper - HHH000204: Processing PersistenceUnitInfo [name: petclinic]
INFO  Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
INFO  JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'petclinic'
Hibernate: select distinct vet0_.id as id1_5_0_, specialty2_.id as id1_2_1_, vet0_.first_name as first_na2_5_0_, vet0_.last_name as last_nam3_5_0_, specialty2_.name as name2_2_1_, specialtie1_.vet_id as vet_id1_4_0__, specialtie1_.specialty_id as specialt2_4_0__ from vets vet0_ left outer join vet_specialties specialtie1_ on vet0_.id=specialtie1_.vet_id left outer join specialties specialty2_ on specialtie1_.specialty_id=specialty2_.id order by vet0_.last_name, vet0_.first_name
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_6_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet_id4_6_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e8ba590 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@435445dc, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10f5eebc testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@d74572b]; rollback [true]
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_, visits3_.pet_id as pet_id4_6_3_, visits3_.id as id1_6_3_, visits3_.id as id1_6_4_, visits3_.visit_date as visit_da2_6_4_, visits3_.description as descript3_6_4_, visits3_.pet_id as pet_id4_6_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
Hibernate: insert into visits (id, visit_date, description, pet_id) values (null, ?, ?, ?)
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e8ba590 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@435445dc, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10f5eebc testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e8ba590 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@7810644d, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10f5eebc testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@d74572b]; rollback [true]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_6_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: update owners set first_name=?, last_name=?, address=?, city=?, telephone=? where id=?
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e8ba590 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@7810644d, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10f5eebc testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
Hibernate: select visit0_.id as id1_6_, visit0_.visit_date as visit_da2_6_, visit0_.description as descript3_6_, visit0_.pet_id as pet_id4_6_ from visits visit0_ where visit0_.pet_id=?
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_, visits3_.pet_id as pet_id4_6_3_, visits3_.id as id1_6_3_, visits3_.id as id1_6_4_, visits3_.visit_date as visit_da2_6_4_, visits3_.description as descript3_6_4_, visits3_.pet_id as pet_id4_6_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e8ba590 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@e61dea0, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10f5eebc testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@d74572b]; rollback [true]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_6_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet_id4_6_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select pettype0_.id as id1_3_, pettype0_.name as name2_3_ from types pettype0_ order by pettype0_.name
Hibernate: insert into pets (id, name, birth_date, owner_id, type_id) values (null, ?, ?, ?, ?)
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e8ba590 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@e61dea0, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10f5eebc testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e8ba590 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@1ea79665, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10f5eebc testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@d74572b]; rollback [true]
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: insert into owners (id, first_name, last_name, address, city, telephone) values (null, ?, ?, ?, ?, ?)
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e8ba590 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@1ea79665, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10f5eebc testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_1_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_6_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e8ba590 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@34f8702a, testMethod = shouldUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10f5eebc testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@d74572b]; rollback [true]
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_, visits3_.pet_id as pet_id4_6_3_, visits3_.id as id1_6_3_, visits3_.id as id1_6_4_, visits3_.visit_date as visit_da2_6_4_, visits3_.description as descript3_6_4_, visits3_.pet_id as pet_id4_6_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@2e8ba590 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@34f8702a, testMethod = shouldUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10f5eebc testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
Hibernate: select pettype0_.id as id1_3_, pettype0_.name as name2_3_ from types pettype0_ order by pettype0_.name
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_, visits3_.pet_id as pet_id4_6_3_, visits3_.id as id1_6_3_, visits3_.id as id1_6_4_, visits3_.visit_date as visit_da2_6_4_, visits3_.description as descript3_6_4_, visits3_.pet_id as pet_id4_6_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.538 s - in org.springframework.samples.petclinic.service.ClinicServiceJpaTests
[INFO] Running org.springframework.samples.petclinic.service.ClinicServiceJdbcTests
INFO  DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
INFO  DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4856a2e7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@63452a57, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@69ff9c81, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7226e55d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@f1a2064, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4547b442, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@50c923ff, org.springframework.test.context.event.EventPublishingTestExecutionListener@150028b6]
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@7dca9882 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@661c507b, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1405534e testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@c78efd7]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@7dca9882 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@661c507b, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1405534e testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@7dca9882 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@51418e21, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1405534e testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@c78efd7]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@7dca9882 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@51418e21, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1405534e testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@7dca9882 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@fd92279, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1405534e testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@c78efd7]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@7dca9882 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@fd92279, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1405534e testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@7dca9882 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@6dfac70b, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1405534e testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@c78efd7]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@7dca9882 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@6dfac70b, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1405534e testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@7dca9882 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@53f51615, testMethod = shouldUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1405534e testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@c78efd7]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test: [DefaultTestContext@7dca9882 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@53f51615, testMethod = shouldUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1405534e testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.059 s - in org.springframework.samples.petclinic.service.ClinicServiceJdbcTests
INFO  LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'petclinic'
INFO  LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'petclinic'
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 62, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.6:report (report) @ spring-framework-petclinic ---
[INFO] Loading execution data file /workspace/source/target/jacoco.exec
[INFO] Analyzed bundle 'Spring Framework Petclinic' with 36 classes
[INFO] 
[INFO] --- maven-war-plugin:3.3.1:war (default-war) @ spring-framework-petclinic ---
[INFO] Packaging webapp
[INFO] Assembling webapp [spring-framework-petclinic] in [/workspace/source/target/petclinic]
[INFO] Processing war project
[INFO] Copying webapp resources [/workspace/source/src/main/webapp]
[INFO] Building war: /workspace/source/target/petclinic.war
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  01:21 min
[INFO] Finished at: 2021-03-12T12:37:53Z
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-war-plugin:3.3.1:war (default-war) on project spring-framework-petclinic: Error assembling WAR: Problem creating war: Execution exception: Java heap space -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
[31m
Pipeline failed on stage 'from-build-pack' : container 'step-build-mvn-deploy'. The execution of the pipeline has stopped.[0m
